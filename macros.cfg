[gcode_macro START_PRINT]
description: Start print and complete all pre-print actions
								 	
gcode:
    POWER_ON_PRINTER
    G4 P5000
    {% set BED_TEMP = params.BED_TEMP|default(60)|float %}
    {% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(200)|float %}

    # Start bed heating
    M140 S{BED_TEMP}
    # Start Extruder heating
    M104 S{EXTRUDER_TEMP}

    ; Initial setups
    G90 ; use absolute coordinates
    #M83 ; extruder relative mode

    # Reset the G-Code Z offset (adjust Z offset if needed)
    SET_GCODE_OFFSET Z=0

    # Home the printer
    HOME_CHECK
    #G1 X3 Y3 Z0.25 F5000 ; move to corner of the bed to avoid ooze over centre
    G1 X10 Y.5 Z0.25 F5000 ; move to corner of the bed to avoid ooze over centre

    # Wait for bed to reach temperature
    TEMPERATURE_WAIT SENSOR=heater_bed MINIMUM={BED_TEMP}
    # Set and wait for nozzle to reach temperature
    M109 S{EXTRUDER_TEMP}

    ; Return to prime position, Prime line routine
    G92 E0 ; Reset Extruder
    #G1 Z3 F3000 ; move z up little to prevent scratching of surface
    G1 X10 Y.5 Z0.25 F5000.0 ; Move to start position
    G1 X100 Y.5 Z0.25 F1500.0 E15 ; Draw the first line
    G1 X100 Y.2 Z0.25 F5000.0 ; Move to side a little
    G1 X10 Y.2 Z0.25 F1500.0 E30 ; Draw the second line
    G92 E0 ; Reset Extruder

    #  ; Retract a little
    G1 E-1 F500
    G92 E0 ; Reset Extruder
    
    # ; Quickly wipe away from the filament line
    G1 Y3

    ; Absolute extruder mode
    # M82

[gcode_macro END_PRINT]
description: Turn off elements and display bed at end of print
gcode:
    # Turn off bed, extruder, and fan
    M140 S0
    M104 S0
    M106 S0
    # Move nozzle away from print while retracting
    G91
    G1 X-2 Y-2 E-3 F300
    G90

    #G4 P1000 ; pause for snapshot
    SHOW_PRINT
    # Raise nozzle by 10mm
    #G1 Z30 F3000
    #G90
    # Disable steppers
    M84

[gcode_macro CANCEL_PRINT]
description: Cancel the actual running print
rename_existing: CANCEL_PRINT_BASE
gcode:
  PAUSE
  TURN_OFF_HEATERS
  CANCEL_PRINT_BASE
  # Turn off bed, extruder, and fan
    M140 S0
    M104 S0
    M106 S0

[gcode_macro PAUSE]
description: Pause the actual running print
rename_existing: PAUSE_BASE
# change this if you need more or less extrusion
variable_extrude: 1.0
gcode:
  ##### read E from pause macro #####
  {% set E = printer["gcode_macro PAUSE"].extrude|float %}
  ##### set park positon for x and y #####
  # default is your max posion from your printer.cfg
  {% set x_park = printer.toolhead.axis_maximum.x|float - 5.0 %}
  {% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}
  ##### calculate save lift position #####
  {% set max_z = printer.toolhead.axis_maximum.z|float %}
  {% set act_z = printer.toolhead.position.z|float %}
  {% if act_z < (max_z - 2.0) %}
      {% set z_safe = 2.0 %}
  {% else %}
      {% set z_safe = max_z - act_z %}
  {% endif %}
  ##### end of definitions #####
  PAUSE_BASE
  G91
  {% if printer.extruder.can_extrude|lower == 'true' %}
    G1 E-{E} F2100
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}
  {% if "xyz" in printer.toolhead.homed_axes %}
    G1 Z{z_safe} F900
    G90
    G1 X{x_park} Y{y_park} F6000
  {% else %}
    {action_respond_info("Printer not homed")}
  {% endif %}

[gcode_macro RESUME]
description: Resume the actual running print
rename_existing: RESUME_BASE
gcode:
  ##### read E from pause macro #####
  {% set E = printer["gcode_macro PAUSE"].extrude|float %}
  #### get VELOCITY parameter if specified ####
  {% if 'VELOCITY' in params|upper %}
    {% set get_params = ('VELOCITY=' + params.VELOCITY)  %}
  {%else %}
    {% set get_params = "" %}
  {% endif %}
  ##### end of definitions #####
  {% if printer.extruder.can_extrude|lower == 'true' %}
    G91
    G1 E{E} F2100
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}  
  RESUME_BASE {get_params}

[gcode_macro POWER_OFF_PRINTER]
description: Toggle off printer power
gcode:
  {action_respond_info("POWER: TP-LINK SmartPlug power off")}
  {action_call_remote_method("set_device_power",
                             device="printer",
                             state="off")}

[gcode_macro POWER_ON_PRINTER]
description: Toggle on printer power
gcode:
  {action_call_remote_method("set_device_power",
                               device="printer",
                               state="on")}

[gcode_macro LOAD_FILAMENT]
description: Loads filament into the extruder
gcode:
  {% if printer.extruder.temperature < 180 %}
    {action_respond_info("Extruder temperature too low")}
  {% else %}
    SAVE_GCODE_STATE NAME=LOAD_state
    G91                   # Relative coords
    G1 E50 F{ 5 * 60 }  # extrude
    G4 P{ 0.9 * 1000 }    # dwell (ms)
    G1 E25.0 F{ 5 * 60 }  # extrude a little more
    RESTORE_GCODE_STATE NAME=LOAD_state
  {% endif %}

[gcode_macro UNLOAD_FILAMENT]
description: Unloads Filament from extruder
gcode:
  {% if printer.extruder.temperature < 180 %}
    {action_respond_info("Extruder temperature too low")}
  {% else %}
    SAVE_GCODE_STATE NAME=UNLOAD_state
    {% set Z = params.Z|default(50)|int %}
    {% set axis_max = printer.toolhead.axis_maximum %}
    {% set pos = printer.toolhead.position %}
 
    {% set z_diff = axis_max.z - pos.z %}
    {% set z_safe_lift = [ Z, z_diff ] | min%}
    #HOME_CHECK

    G91                   # relative positioning
    #G0 Z{ z_safe_lift }
    # Reset extruder position
    G92 E0
    G1 E5.0 F300        # extrude a little
    G1 E-50 F{ 10 * 60 } # perform the unload
    G1 E-50 F{ 5 * 60 }   # finish the unload
    RESTORE_GCODE_STATE NAME=UNLOAD_state
  {% endif %}

[gcode_macro M300]
gcode:
    # Use a default 1kHz tone if S is omitted.
    {% set S = params.S|default(1000)|int %}
    # Use a 10ms duration is P is omitted.
    {% set P = params.P|default(100)|int %}
    SET_PIN PIN=BEEPER_pin VALUE=0.5 CYCLE_TIME={ 1.0/S if S > 0 else 1 }
    G4 P{P}
    SET_PIN PIN=BEEPER_pin VALUE=0

[gcode_macro LED_OFF]
description: Turn LED off
gcode:
    SET_PIN PIN=led_red VALUE=0
    SET_PIN PIN=led_blue VALUE=0
    SET_PIN PIN=led_green VALUE=0

[gcode_macro LED_WHITE]
description: Turn LED on at white
gcode:
    SET_PIN PIN=led_red VALUE=1
    SET_PIN PIN=led_blue VALUE=1
    SET_PIN PIN=led_green VALUE=1


[gcode_macro LED_RED]
description: Turn LED on at red
gcode:
    SET_PIN PIN=led_red VALUE=1
    SET_PIN PIN=led_blue VALUE=0
    SET_PIN PIN=led_green VALUE=0

[gcode_macro LED_BLUE]
description: Turn LED on at blue
gcode:
    SET_PIN PIN=led_red VALUE=0
    SET_PIN PIN=led_blue VALUE=1
    SET_PIN PIN=led_green VALUE=0

[gcode_macro LED_GREEN]
description: Turn LED on at green
gcode:
    SET_PIN PIN=led_red VALUE=0
    SET_PIN PIN=led_blue VALUE=0
    SET_PIN PIN=led_green VALUE=1


[gcode_macro PID_EXTRUDER]
description: PID Tune for the Extruder
gcode:
  {% set TARGET_TEMP = params.TARGET_TEMP|default(200)|float %} 
  PID_CALIBRATE HEATER=extruder TARGET={TARGET_TEMP}
  TURN_OFF_HEATERS
  SAVE_CONFIG

[gcode_macro PID_BED]
description: PID Tune for the Bed
gcode:
  {% set TARGET_TEMP = params.TARGET_TEMP|default(60)|float %} 
  PID_CALIBRATE HEATER=heater_bed TARGET={TARGET_TEMP}
  TURN_OFF_HEATERS
  SAVE_CONFIG

[gcode_macro NOZZLE_MID]
description: Moves nozzle to the center of the bed
gcode:
  {% set Z = params.Z|default(10)|float %}
  HOME_CHECK
  G1 Z{Z} F500
  G1 X110 Y110 F4000

[gcode_macro SHOW_PRINT]
description: Moves the extruder out of the way and bed forward
gcode:
    HOME_CHECK
    {% set Z = params.Z|default(50)|int %}
    {% set axis_max = printer.toolhead.axis_maximum %}
    {% set pos = printer.toolhead.position %}
 
    {% set z_diff = axis_max.z - pos.z %}
    {% set z_safe_lift = [ Z, z_diff ] | min%}
    G91
    G1 Z{ z_safe_lift } F1500
    G90
    G1 X10 Y220 F4000

[gcode_macro PURGE]
description: Extrudes filament, used to clean out previous filament
gcode:
  {% if printer.extruder.temperature < 180 %}
    {action_respond_info("Extruder temperature too low")}
  {% else %}
  {% set PURGE_AMOUNT = params.PURGE_AMOUNT|default(40)|float %}
    SAVE_GCODE_STATE NAME=PURGE_state
    G91                   # relative coords
    G1 E{PURGE_AMOUNT} F{ 5 * 60 }  # purge
    RESTORE_GCODE_STATE NAME=PURGE_state
  {% endif %}

[gcode_macro HOME_CHECK]
description: Checks if the printer is homed, it not it homes the printer
gcode:
  {% if printer.toolhead.homed_axes != "xyz" %}
  G28 Z ; home z axis
  G1 Z3 F3000 ; move z up little to prevent scratching of surface
  G28 X Y ; home x y axes
  {% endif %}

[gcode_macro M600]
description: Starts process of Filament Change
gcode:
  {% if printer.extruder.temperature < 180 %}
    {action_respond_info("Extruder temperature too low")}
  {% else %}
    PAUSE
    UNLOAD_FILAMENT
  {% endif %}

[gcode_macro FC_RESUME]
description: Resume print after Filament Change
gcode:
    ##### read E from pause macro #####
    {% set E = printer["gcode_macro PAUSE"].extrude|float %}
    SET_IDLE_TIMEOUT TIMEOUT={ 10 * 60 }
    G1 E-{ E }
    # Reset extruder position
    G92 E0
    RESUME

[gcode_macro BED_ADJUSTED]
description: Marks current bed screw as adjusted during bed tramming
gcode:
    ADJUSTED

[gcode_macro BED_ACCEPT]
description: Marks current bed screw as accepted during bed tramming
gcode:
    ACCEPT

[gcode_macro BED_ABORT]
description: Aborts current automated calibration tool
gcode:
    ABORT

[delayed_gcode delayed_printer_off]
initial_duration: 0.
gcode:
  {% if printer.idle_timeout.state == "Idle" %}
    POWER_OFF_PRINTER
  {% endif %}

[gcode_macro CLEAN_BED]
description: Moves extruder out of the way and extends bed for easy access
gcode:
    {% set Z = params.Z|default(100)|float %}

    HOME_CHECK
    #G1 Z{Z} F3000
    G1 X0 Y220 Z{Z} F4000